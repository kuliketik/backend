<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class User extends CI_Controller
{


    function __construct()
    {
        parent::__construct();
        $this->load->model('User_model');
        $this->load->library('form_validation');
    }

    public function index()
    {
        $user = $this->User_model->get_all();

        $data = array(
            'user_data' => $user
        );

        $this->template->load('template','tbUser_list', $data);
    }

    public function read($id)
    {
        $row = $this->User_model->get_by_id($id);
        if ($row) {
            $data = array(
		'idUser' => $row->idUser,
		'emailUser' => $row->emailUser,
		'namaUser' => $row->namaUser,
		'passwordUser' => $row->passwordUser,
		'alamatUser' => $row->alamatUser,
	    );
            $this->template->load('template','tbUser_read', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('user'));
        }
    }

    public function create()
    {
        $data = array(
            'button' => 'Create',
            'action' => site_url('user/create_action'),
	    'idUser' => set_value('idUser'),
	    'emailUser' => set_value('emailUser'),
	    'namaUser' => set_value('namaUser'),
	    'passwordUser' => set_value('passwordUser'),
	    'alamatUser' => set_value('alamatUser'),
	);
        $this->template->load('template','tbUser_form', $data);
    }

    public function create_action()
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {
            $data = array(
		'emailUser' => $this->input->post('emailUser',TRUE),
		'namaUser' => $this->input->post('namaUser',TRUE),
		'passwordUser' => md5($this->input->post('passwordUser',TRUE)),
		'alamatUser' => $this->input->post('alamatUser',TRUE),
	    );

            $this->User_model->insert($data);
            $this->session->set_flashdata('message', 'Create Record Success');
            redirect(site_url('user'));
        }
    }

    public function update($id)
    {
        $row = $this->User_model->get_by_id($id);

        if ($row) {
            $data = array(
                'button' => 'Update',
                'action' => site_url('user/update_action'),
		'idUser' => set_value('idUser', $row->idUser),
		'emailUser' => set_value('emailUser', $row->emailUser),
		'namaUser' => set_value('namaUser', $row->namaUser),
		'passwordUser' => set_value('passwordUser', $row->passwordUser),
		'alamatUser' => set_value('alamatUser', $row->alamatUser),
	    );
            $this->template->load('template','tbUser_form', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('user'));
        }
    }

    public function update_action()
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->update($this->input->post('idUser', TRUE));
        } else {
            $data = array(
		'emailUser' => $this->input->post('emailUser',TRUE),
		'namaUser' => $this->input->post('namaUser',TRUE),
		'passwordUser' => md5($this->input->post('passwordUser',TRUE)),
		'alamatUser' => $this->input->post('alamatUser',TRUE),
	    );

            $this->User_model->update($this->input->post('idUser', TRUE), $data);
            $this->session->set_flashdata('message', 'Update Record Success');
            redirect(site_url('user'));
        }
    }

    public function delete($id)
    {
        $row = $this->User_model->get_by_id($id);

        if ($row) {
            $this->User_model->delete($id);
            $this->session->set_flashdata('message', 'Delete Record Success');
            redirect(site_url('user'));
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('user'));
        }
    }

    public function _rules()
    {
	$this->form_validation->set_rules('emailUser', 'emailuser', 'trim|required');
	$this->form_validation->set_rules('namaUser', 'namauser', 'trim|required');
	$this->form_validation->set_rules('passwordUser', 'passworduser', 'trim|required');
	$this->form_validation->set_rules('alamatUser', 'alamatuser', 'trim|required');

	$this->form_validation->set_rules('idUser', 'idUser', 'trim');
	$this->form_validation->set_error_delimiters('<span class="text-danger">', '</span>');
    }

}

/* End of file User.php */
/* Location: ./application/controllers/User.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2016-05-07 21:56:56 */
/* http://harviacode.com */
